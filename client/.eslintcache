[{"C:\\Users\\rpsus\\onedrive\\desktop\\nsv3\\algo_scale\\client\\src\\index.js":"1","C:\\Users\\rpsus\\onedrive\\desktop\\nsv3\\algo_scale\\client\\src\\App.js":"2","C:\\Users\\rpsus\\onedrive\\desktop\\nsv3\\algo_scale\\client\\src\\components\\Login.js":"3","C:\\Users\\rpsus\\onedrive\\desktop\\nsv3\\algo_scale\\client\\src\\components\\ContactUs.js":"4","C:\\Users\\rpsus\\onedrive\\desktop\\nsv3\\algo_scale\\client\\src\\components\\Analytics\\Analytics.js":"5"},{"size":219,"mtime":1612518821277,"results":"6","hashOfConfig":"7"},{"size":1032,"mtime":1612540217340,"results":"8","hashOfConfig":"7"},{"size":3719,"mtime":1612520588473,"results":"9","hashOfConfig":"7"},{"size":4586,"mtime":1612520149402,"results":"10","hashOfConfig":"7"},{"size":3929,"mtime":1612551497022,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ohchj1",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\rpsus\\onedrive\\desktop\\nsv3\\algo_scale\\client\\src\\index.js",[],["25","26"],"C:\\Users\\rpsus\\onedrive\\desktop\\nsv3\\algo_scale\\client\\src\\App.js",[],"C:\\Users\\rpsus\\onedrive\\desktop\\nsv3\\algo_scale\\client\\src\\components\\Login.js",["27","28","29"],"import React, { useState, useRef } from \"react\";\r\nimport { Button, Typography, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport axios from \"axios\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: 300,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const classes = useStyles();\r\n  const [err, setErr] = useState([]);\r\n  const [submitText, setSubmitText] = useState(\"Login\");\r\n  const [isSubmitted, setisSubmitted] = useState(false);\r\n  const [issubmitting, setisSubmitting] = useState(false);\r\n  const reRef = useRef();\r\n\r\n  const preventDefault = (event) => event.preventDefault();\r\n\r\n  const validateEmail = function (email) {\r\n    var re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    return re.test(email);\r\n  };\r\n\r\n  const validate = (data) => {\r\n    setErr([]);\r\n    let flag = true;\r\n    if (data.password.value.length < 5) {\r\n      setErr((err) =>\r\n        err.concat(\"Password can not contain less than 5 character\")\r\n      );\r\n    }\r\n    if (!validateEmail(data.email.value)) {\r\n      setErr((err) => err.concat(\"Email Not valid\"));\r\n      flag = false;\r\n    }\r\n    return flag;\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    preventDefault(e);\r\n    setSubmitText(\"Logging...\");\r\n    setisSubmitted(false);\r\n    setisSubmitting(true);\r\n    if (validate(e.target)) {\r\n      const token = await reRef.current.executeAsync();\r\n      reRef.current.reset();\r\n\r\n      const data = {\r\n        email: e.target.email.value,\r\n        password: e.target.password.value,\r\n      };\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: { \"content-type\": \"application/json\" },\r\n        data: JSON.stringify({ data, token }),\r\n        url: `http://localhost:5000/api/login`,\r\n      };\r\n      await axios(options)\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            setisSubmitted(true);\r\n            console.log(\"Yes successfully submitted\");\r\n          } else {\r\n            console.log(\"Falied to submit\");\r\n          }\r\n          console.log(res);\r\n        })\r\n        .catch((err) => console.log(err.message));\r\n      setSubmitText(\"Login\");\r\n      setisSubmitting(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"contactUs\">\r\n      <Typography variant=\"h6\" color=\"secondary\">\r\n        Login\r\n      </Typography>\r\n      <ReCAPTCHA\r\n        sitekey={\"6LfX7EgaAAAAACjt3MNwHEX0hut4viSEWJWT4UQf\"}\r\n        size=\"invisible\"\r\n        ref={reRef}\r\n      ></ReCAPTCHA>\r\n      {err.map((er, i) => {\r\n        return (\r\n          <div style={{ width: 300, marginLeft: 300 }} key={i}>\r\n            <Alert severity=\"error\">{er}</Alert>\r\n          </div>\r\n        );\r\n      })}\r\n      <form onSubmit={handleSubmit} className={classes.root} autoComplete=\"off\">\r\n        <TextField\r\n          id=\"email\"\r\n          type=\"email\"\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          value=\"joedoe@gmail.com\"\r\n        ></TextField>\r\n        <TextField\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          value=\"password\"\r\n        ></TextField>\r\n        <br></br>\r\n        <br></br>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"Login\"\r\n          disabled={issubmitting}\r\n        >\r\n          {submitText}\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\rpsus\\onedrive\\desktop\\nsv3\\algo_scale\\client\\src\\components\\ContactUs.js",["30","31"],"import React, { useState, useRef } from \"react\";\nimport { Button, Typography, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport axios from \"axios\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 300,\n    },\n  },\n}));\n\nfunction ContactUs() {\n  const classes = useStyles();\n  const [err, setErr] = useState([]);\n  const [submitText, setSubmitText] = useState(\"Submit\");\n  const [isSubmitted, setisSubmitted] = useState(false);\n  const [issubmitting, setisSubmitting] = useState(false);\n  const reRef = useRef();\n\n  const preventDefault = (event) => event.preventDefault();\n\n  const validateEmail = function (email) {\n    var re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    return re.test(email);\n  };\n\n  const validate = (data) => {\n    setErr([]);\n    let flag = true;\n    if (!data.firstName || data.firstName.value.length < 3) {\n      setErr((err) => err.concat(\"First Name can not be empty\"));\n      flag = false;\n    }\n    if (!data.lastName || data.lastName.value.length < 2) {\n      setErr((err) => err.concat(\"Last Name can not be empty\"));\n      flag = false;\n    }\n    if (!data.message || data.message.value.length < 10) {\n      setErr((err) => err.concat(\"Message can not be Empty\"));\n      flag = false;\n    }\n    if (!validateEmail(data.email.value)) {\n      setErr((err) => err.concat(\"Email Not valid\"));\n      flag = false;\n    }\n    return flag;\n  };\n  const handleSubmit = async (e) => {\n    preventDefault(e);\n    setSubmitText(\"Submitting...\");\n    setisSubmitted(false);\n    setisSubmitting(true);\n    if (validate(e.target)) {\n      const token = await reRef.current.executeAsync();\n      reRef.current.reset();\n\n      const data = {\n        firstName: e.target.firstName.value,\n        lastName: e.target.lastName.value,\n        email: e.target.email.value,\n        message: e.target.message.value,\n      };\n      const options = {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        data: JSON.stringify({ data, token }),\n        url: `http://localhost:5000/api/form/submit`,\n      };\n      await axios(options)\n        .then((res) => {\n          if (res.status === 200) {\n            setisSubmitted(true);\n            console.log(\"Yes successfully submitted\");\n          } else {\n            console.log(\"Falied to submit\");\n          }\n          console.log(res);\n        })\n        .catch((err) => console.log(err.message));\n      setSubmitText(\"Submit\");\n      setisSubmitting(false);\n    }\n  };\n  return (\n    <div className=\"contactUs\">\n      <Typography variant=\"h6\" color=\"secondary\">\n        Contact Us Form\n      </Typography>\n      <ReCAPTCHA\n        sitekey={\"6LfX7EgaAAAAACjt3MNwHEX0hut4viSEWJWT4UQf\"}\n        size=\"invisible\"\n        ref={reRef}\n      ></ReCAPTCHA>\n      {err.map((er, i) => {\n        return (\n          <div style={{ width: 300, marginLeft: 300 }} key={i}>\n            <Alert severity=\"error\">{er}</Alert>\n          </div>\n        );\n      })}\n      <form onSubmit={handleSubmit} className={classes.root} autoComplete=\"off\">\n        <TextField\n          id=\"firstName\"\n          label=\"First Name\"\n          name=\"fistName\"\n          variant=\"outlined\"\n          size=\"small\"\n          required\n          value=\"John\"\n        />\n        <TextField\n          id=\"LastName\"\n          name=\"lastName\"\n          label=\"Last Name\"\n          variant=\"outlined\"\n          size=\"small\"\n          required\n          value=\"Doe\"\n        ></TextField>\n        <TextField\n          id=\"email\"\n          type=\"email\"\n          label=\"Email\"\n          name=\"email\"\n          variant=\"outlined\"\n          size=\"small\"\n          required\n          value=\"joedoe@gmail.com\"\n        ></TextField>\n        <TextField\n          id=\"message\"\n          label=\"Message\"\n          size=\"small\"\n          name=\"message\"\n          variant=\"outlined\"\n          required\n          value=\"Hello everyone! How are you?\"\n        ></TextField>\n        <br></br>\n        <br></br>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={issubmitting}\n        >\n          {submitText}\n        </Button>\n      </form>\n      <div style={{ margin: 10, marginLeft: \"88vh\", height: 10, width: 200 }}>\n        {isSubmitted && <Alert severity=\"success\">successfully submit!</Alert>}\n      </div>\n    </div>\n  );\n}\n\nexport default ContactUs;\n","C:\\Users\\rpsus\\onedrive\\desktop\\nsv3\\algo_scale\\client\\src\\components\\Analytics\\Analytics.js",["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":21,"column":10,"nodeType":"40","messageId":"41","endLine":21,"endColumn":21},{"ruleId":"42","severity":1,"message":"43","line":28,"column":21,"nodeType":"44","messageId":"45","endLine":28,"endColumn":22,"suggestions":"46"},{"ruleId":"42","severity":1,"message":"43","line":28,"column":37,"nodeType":"44","messageId":"45","endLine":28,"endColumn":38,"suggestions":"47"},{"ruleId":"42","severity":1,"message":"43","line":28,"column":21,"nodeType":"44","messageId":"45","endLine":28,"endColumn":22,"suggestions":"48"},{"ruleId":"42","severity":1,"message":"43","line":28,"column":37,"nodeType":"44","messageId":"45","endLine":28,"endColumn":38,"suggestions":"49"},{"ruleId":"38","severity":1,"message":"50","line":3,"column":10,"nodeType":"40","messageId":"41","endLine":3,"endColumn":20},{"ruleId":"51","severity":1,"message":"52","line":97,"column":6,"nodeType":"53","endLine":97,"endColumn":12,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'isSubmitted' is assigned a value but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["57","58"],["59","60"],["61","62"],["63","64"],"'makeStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'endDate' and 'startDate'. Either include them or remove the dependency array.","ArrayExpression",["65"],"no-global-assign","no-unsafe-negation",{"messageId":"66","fix":"67","desc":"68"},{"messageId":"69","fix":"70","desc":"71"},{"messageId":"66","fix":"72","desc":"68"},{"messageId":"69","fix":"73","desc":"71"},{"messageId":"66","fix":"74","desc":"68"},{"messageId":"69","fix":"75","desc":"71"},{"messageId":"66","fix":"76","desc":"68"},{"messageId":"69","fix":"77","desc":"71"},{"desc":"78","fix":"79"},"removeEscape",{"range":"80","text":"81"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"82","text":"83"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"84","text":"81"},{"range":"85","text":"83"},{"range":"86","text":"81"},{"range":"87","text":"83"},{"range":"88","text":"81"},{"range":"89","text":"83"},"Update the dependencies array to be: [endDate, flag, startDate]",{"range":"90","text":"91"},[881,882],"",[881,881],"\\",[897,898],[897,897],[859,860],[859,859],[875,876],[875,875],[2744,2750],"[endDate, flag, startDate]"]